#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end
$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')

require 'rubygems'
require 'terminal-table'
require 'gli'
require 'javaparse'
require 'jstats_version'
require 'jstats/loc'

include GLI::App

program_desc 'Ouputs from the command line stats about your Java projects'

version Jstats::VERSION

#desc 'Describe some switch here'
#switch [:s,:switch]

#desc 'Describe some flag here'
#default_value 'the default'
#arg_name 'The name of the argument'
#flag [:f,:flagname]

desc 'Overall lines count (code, comments, blank) and output file sizes distribution'
arg_name 'Java source files location'
command :loc do |c|
  #c.desc 'Describe a switch to loc'
  #c.switch :s

  #c.desc 'Describe a flag to loc'
  #c.default_value 'default'
  #c.flag :f
  c.action do |global_options,options,args|
    tables = Jstats::Loc.new(*args).tables
    puts tables[0]
    puts tables[1]
  end
end

desc 'Stats about methods sizes'
arg_name 'TODO'
command :methods do |c|
  c.action do |global_options,options,args|
    @java_files = JavaParse::JavaFiles.new(*args)
    @java_files.each { |unit|
        unless unit.methods.size == 0
          puts "#{unit.unit_name} #{unit.loc} #{unit.methods.size}" 
          puts unit.methods.map {|m| m.name}
        end
    }
    
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
